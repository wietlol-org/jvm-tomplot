// hash: #737104c5
// @formatter:off

package me.wietlol.tomplot.kotlin.data.serializers

import java.io.InputStream
import java.io.OutputStream
import java.util.UUID
import me.wietlol.bitblock.api.serialization.DeserializationContext
import me.wietlol.bitblock.api.serialization.ModelSerializer
import me.wietlol.bitblock.api.serialization.Schema
import me.wietlol.bitblock.api.serialization.SerializationContext
import me.wietlol.bitblock.api.serialization.deserialize
import me.wietlol.tomplot.kotlin.data.builders.KtScriptBuilder
import me.wietlol.tomplot.kotlin.data.models.*
import me.wietlol.tomplot.kotlin.data.models.KtScript
import me.wietlol.utils.common.streams.readUnsignedVarInt
import me.wietlol.utils.common.streams.writeUnsignedVarInt

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:70v0f9
// @tomplot:customCode:end
// @formatter:off

object KtScriptSerializer : ModelSerializer<KtScript, KtScript>
{
	private val endOfObject: Int = 0
	
	private val nameIndex: Int = 1
	
	private val packageIndex: Int = 2
	
	private val importsIndex: Int = 3
	
	private val templatedValuesIndex: Int = 4
	
	private val membersIndex: Int = 5
	
	private val sourceFolderIndex: Int = 6
	
	override val modelId: UUID
		get() = KtScript.serializationKey
	
	override val dataClass: Class<KtScript>
		get() = KtScript::class.java
	
	override fun serialize(serializationContext: SerializationContext, stream: OutputStream, schema: Schema, entity: KtScript)
	{
		stream.writeUnsignedVarInt(nameIndex)
		schema.serialize(serializationContext, stream, entity.name)
		
		entity.`package`?.also {
			stream.writeUnsignedVarInt(packageIndex)
			schema.serialize(serializationContext, stream, it)
		}
		
		stream.writeUnsignedVarInt(importsIndex)
		schema.serialize(serializationContext, stream, entity.imports)
		
		stream.writeUnsignedVarInt(templatedValuesIndex)
		schema.serialize(serializationContext, stream, entity.templatedValues)
		
		stream.writeUnsignedVarInt(membersIndex)
		schema.serialize(serializationContext, stream, entity.members)
		
		stream.writeUnsignedVarInt(sourceFolderIndex)
		schema.serialize(serializationContext, stream, entity.sourceFolder)
		
		stream.writeUnsignedVarInt(endOfObject)
	}
	
	override fun deserialize(deserializationContext: DeserializationContext, stream: InputStream, schema: Schema): KtScript
	{
		var name: String? = null
		var `package`: KtPackage? = null
		var imports: MutableList<KtImport>? = mutableListOf()
		var templatedValues: MutableList<KtTemplatedValue>? = mutableListOf()
		var members: MutableList<KtScriptMember>? = mutableListOf()
		var sourceFolder: String? = null
		
		while (true)
		{
			when (stream.readUnsignedVarInt())
			{
				endOfObject -> return DefaultKtScript(
					name!!,
					`package`,
					imports!!.toMutableList(),
					templatedValues!!.toMutableList(),
					members!!.toMutableList(),
					sourceFolder!!,
				)
				nameIndex -> name = schema.deserialize(deserializationContext, stream)
				packageIndex -> `package` = schema.deserialize(deserializationContext, stream)
				importsIndex -> imports = schema.deserialize(deserializationContext, stream)
				templatedValuesIndex -> templatedValues = schema.deserialize(deserializationContext, stream)
				membersIndex -> members = schema.deserialize(deserializationContext, stream)
				sourceFolderIndex -> sourceFolder = schema.deserialize(deserializationContext, stream)
				else -> schema.deserialize<Any>(deserializationContext, stream)
			}
		}
	}
	
	// @formatter:on
	// @tomplot:customCode:start:5CFs54
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
