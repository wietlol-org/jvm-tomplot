// hash: #0e527705
// data: serializationKey:5d9ae5e4-3def-4af6-b4ed-8ff3554c630b
// @formatter:off

package me.wietlol.tomplot.kotlin.data.models

import java.util.UUID
import me.wietlol.bitblock.api.serialization.BitSerializable
import me.wietlol.utils.common.Jsonable
import me.wietlol.utils.common.emptyHashCode
import me.wietlol.utils.common.toJsonString
import me.wietlol.utils.common.with

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq
// @tomplot:customCode:end
// @formatter:off

interface KtObject : BitSerializable, KtComponent, KtInterfaceMember, KtObjectMember, KtClassMember, KtScriptMember, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("5d9ae5e4-3def-4af6-b4ed-8ff3554c630b")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	val name: String?
	
	val superTypes: List<KtTypeReference>
	
	val isCompanion: Boolean
	
	val visibility: KtVisibility
	
	val members: List<KtObjectMember>
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is KtObject) return false
		
		if (name != other.name) return false
		if (superTypes != other.superTypes) return false
		if (isCompanion != other.isCompanion) return false
		if (visibility != other.visibility) return false
		if (members != other.members) return false
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
			.with(name)
			.with(superTypes)
			.with(isCompanion)
			.with(visibility)
			.with(members)
	
	override fun toJson(): String =
		"""{"name":${name.toJsonString()},"superTypes":${superTypes.toJsonString()},"isCompanion":${isCompanion.toJsonString()},"visibility":${visibility.toJsonString()},"members":${members.toJsonString()}}"""
	
	override fun duplicate(): KtObject
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
