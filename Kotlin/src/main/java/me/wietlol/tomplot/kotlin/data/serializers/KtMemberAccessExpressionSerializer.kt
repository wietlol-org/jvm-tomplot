// hash: #bb8f4102
// @formatter:off

package me.wietlol.tomplot.kotlin.data.serializers

import java.io.InputStream
import java.io.OutputStream
import java.util.UUID
import me.wietlol.bitblock.api.serialization.DeserializationContext
import me.wietlol.bitblock.api.serialization.ModelSerializer
import me.wietlol.bitblock.api.serialization.Schema
import me.wietlol.bitblock.api.serialization.SerializationContext
import me.wietlol.bitblock.api.serialization.deserialize
import me.wietlol.tomplot.kotlin.data.builders.KtMemberAccessExpressionBuilder
import me.wietlol.tomplot.kotlin.data.models.*
import me.wietlol.tomplot.kotlin.data.models.KtMemberAccessExpression
import me.wietlol.utils.common.streams.readUnsignedVarInt
import me.wietlol.utils.common.streams.writeUnsignedVarInt

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:70v0f9
// @tomplot:customCode:end
// @formatter:off

object KtMemberAccessExpressionSerializer : ModelSerializer<KtMemberAccessExpression, KtMemberAccessExpression>
{
	private val endOfObject: Int = 0
	
	private val supplierIndex: Int = 1
	
	private val memberNameIndex: Int = 2
	
	private val isConditionalAccessIndex: Int = 3
	
	private val isReferencingAccessIndex: Int = 4
	
	override val modelId: UUID
		get() = KtMemberAccessExpression.serializationKey
	
	override val dataClass: Class<KtMemberAccessExpression>
		get() = KtMemberAccessExpression::class.java
	
	override fun serialize(serializationContext: SerializationContext, stream: OutputStream, schema: Schema, entity: KtMemberAccessExpression)
	{
		stream.writeUnsignedVarInt(supplierIndex)
		schema.serialize(serializationContext, stream, entity.supplier)
		
		stream.writeUnsignedVarInt(memberNameIndex)
		schema.serialize(serializationContext, stream, entity.memberName)
		
		stream.writeUnsignedVarInt(isConditionalAccessIndex)
		schema.serialize(serializationContext, stream, entity.isConditionalAccess)
		
		stream.writeUnsignedVarInt(isReferencingAccessIndex)
		schema.serialize(serializationContext, stream, entity.isReferencingAccess)
		
		stream.writeUnsignedVarInt(endOfObject)
	}
	
	override fun deserialize(deserializationContext: DeserializationContext, stream: InputStream, schema: Schema): KtMemberAccessExpression
	{
		var supplier: KtExpression? = null
		var memberName: String? = null
		var isConditionalAccess: Boolean? = null
		var isReferencingAccess: Boolean? = null
		
		while (true)
		{
			when (stream.readUnsignedVarInt())
			{
				endOfObject -> return DefaultKtMemberAccessExpression(
					supplier!!,
					memberName!!,
					isConditionalAccess!!,
					isReferencingAccess!!,
				)
				supplierIndex -> supplier = schema.deserialize(deserializationContext, stream)
				memberNameIndex -> memberName = schema.deserialize(deserializationContext, stream)
				isConditionalAccessIndex -> isConditionalAccess = schema.deserialize(deserializationContext, stream)
				isReferencingAccessIndex -> isReferencingAccess = schema.deserialize(deserializationContext, stream)
				else -> schema.deserialize<Any>(deserializationContext, stream)
			}
		}
	}
	
	// @formatter:on
	// @tomplot:customCode:start:5CFs54
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
