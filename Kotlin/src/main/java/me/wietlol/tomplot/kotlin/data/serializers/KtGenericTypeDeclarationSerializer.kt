// hash: #1e191645
// @formatter:off

package me.wietlol.tomplot.kotlin.data.serializers

import java.io.InputStream
import java.io.OutputStream
import java.util.UUID
import me.wietlol.bitblock.api.serialization.DeserializationContext
import me.wietlol.bitblock.api.serialization.ModelSerializer
import me.wietlol.bitblock.api.serialization.Schema
import me.wietlol.bitblock.api.serialization.SerializationContext
import me.wietlol.bitblock.api.serialization.deserialize
import me.wietlol.tomplot.kotlin.data.builders.KtGenericTypeDeclarationBuilder
import me.wietlol.tomplot.kotlin.data.models.*
import me.wietlol.tomplot.kotlin.data.models.KtGenericTypeDeclaration
import me.wietlol.utils.common.streams.readUnsignedVarInt
import me.wietlol.utils.common.streams.writeUnsignedVarInt

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:70v0f9
// @tomplot:customCode:end
// @formatter:off

object KtGenericTypeDeclarationSerializer : ModelSerializer<KtGenericTypeDeclaration, KtGenericTypeDeclaration>
{
	private val endOfObject: Int = 0
	
	private val nameIndex: Int = 1
	
	private val varianceIndex: Int = 2
	
	private val superTypeIndex: Int = 3
	
	override val modelId: UUID
		get() = KtGenericTypeDeclaration.serializationKey
	
	override val dataClass: Class<KtGenericTypeDeclaration>
		get() = KtGenericTypeDeclaration::class.java
	
	override fun serialize(serializationContext: SerializationContext, stream: OutputStream, schema: Schema, entity: KtGenericTypeDeclaration)
	{
		stream.writeUnsignedVarInt(nameIndex)
		schema.serialize(serializationContext, stream, entity.name)
		
		entity.variance?.also {
			stream.writeUnsignedVarInt(varianceIndex)
			schema.serialize(serializationContext, stream, it)
		}
		
		entity.superType?.also {
			stream.writeUnsignedVarInt(superTypeIndex)
			schema.serialize(serializationContext, stream, it)
		}
		
		stream.writeUnsignedVarInt(endOfObject)
	}
	
	override fun deserialize(deserializationContext: DeserializationContext, stream: InputStream, schema: Schema): KtGenericTypeDeclaration
	{
		var name: String? = null
		var variance: String? = null
		var superType: KtTypeReference? = null
		
		while (true)
		{
			when (stream.readUnsignedVarInt())
			{
				endOfObject -> return DefaultKtGenericTypeDeclaration(
					name!!,
					variance,
					superType,
				)
				nameIndex -> name = schema.deserialize(deserializationContext, stream)
				varianceIndex -> variance = schema.deserialize(deserializationContext, stream)
				superTypeIndex -> superType = schema.deserialize(deserializationContext, stream)
				else -> schema.deserialize<Any>(deserializationContext, stream)
			}
		}
	}
	
	// @formatter:on
	// @tomplot:customCode:start:5CFs54
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
