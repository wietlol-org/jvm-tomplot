// hash: #78549f96
// data: serializationKey:23a1daa5-7f19-454f-9479-7b86f8ea9cc7
// @formatter:off

package tomplot.kotlin.data.models

import java.util.UUID
import bitblock.api.serialization.BitSerializable
import utils.common.Jsonable
import utils.common.emptyHashCode
import utils.common.toJsonString
import utils.common.with

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq
// @tomplot:customCode:end
// @formatter:off

interface KtScript : BitSerializable, KtComponent, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("23a1daa5-7f19-454f-9479-7b86f8ea9cc7")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	val name: String
	
	val `package`: KtPackage?
	
	val imports: List<KtImport>
	
	val templatedValues: List<KtTemplatedValue>
	
	val members: List<KtScriptMember>
	
	val sourceFolder: String
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is KtScript) return false
		
		if (name != other.name) return false
		if (`package` != other.`package`) return false
		if (imports != other.imports) return false
		if (templatedValues != other.templatedValues) return false
		if (members != other.members) return false
		if (sourceFolder != other.sourceFolder) return false
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
			.with(name)
			.with(`package`)
			.with(imports)
			.with(templatedValues)
			.with(members)
			.with(sourceFolder)
	
	override fun toJson(): String =
		"""{"name":${name.toJsonString()},"package":${`package`.toJsonString()},"imports":${imports.toJsonString()},"templatedValues":${templatedValues.toJsonString()},"members":${members.toJsonString()},"sourceFolder":${sourceFolder.toJsonString()}}"""
	
	override fun duplicate(): KtScript
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
