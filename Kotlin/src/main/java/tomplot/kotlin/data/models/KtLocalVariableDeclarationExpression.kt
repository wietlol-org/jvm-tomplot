// hash: #f913c875
// data: serializationKey:1b9dfeca-7cd4-4539-bac8-b939db40ffad
// @formatter:off

package tomplot.kotlin.data.models

import java.util.UUID
import bitblock.api.serialization.BitSerializable
import utils.common.Jsonable
import utils.common.emptyHashCode
import utils.common.toJsonString
import utils.common.with

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq
// @tomplot:customCode:end
// @formatter:off

interface KtLocalVariableDeclarationExpression : BitSerializable, KtExpression, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("1b9dfeca-7cd4-4539-bac8-b939db40ffad")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	val name: String
	
	val upperBound: KtTypeReference?
	
	val initialValue: KtExpression?
	
	val isVariable: Boolean
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is KtLocalVariableDeclarationExpression) return false
		
		if (name != other.name) return false
		if (upperBound != other.upperBound) return false
		if (initialValue != other.initialValue) return false
		if (isVariable != other.isVariable) return false
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
			.with(name)
			.with(upperBound)
			.with(initialValue)
			.with(isVariable)
	
	override fun toJson(): String =
		"""{"name":${name.toJsonString()},"upperBound":${upperBound.toJsonString()},"initialValue":${initialValue.toJsonString()},"isVariable":${isVariable.toJsonString()}}"""
	
	override fun duplicate(): KtLocalVariableDeclarationExpression
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
