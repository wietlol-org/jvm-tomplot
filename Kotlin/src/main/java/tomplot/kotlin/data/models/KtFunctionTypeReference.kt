// hash: #c52dbbea
// data: serializationKey:ce419d6d-9a46-4990-9fb6-991514b12eb9
// @formatter:off

package tomplot.kotlin.data.models

import java.util.UUID
import bitblock.api.serialization.BitSerializable
import utils.common.Jsonable
import utils.common.emptyHashCode
import utils.common.toJsonString
import utils.common.with

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq
// @tomplot:customCode:end
// @formatter:off

interface KtFunctionTypeReference : BitSerializable, KtTypeReference, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("ce419d6d-9a46-4990-9fb6-991514b12eb9")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	val parameters: List<KtTypeReference>
	
	val result: KtTypeReference
	
	val isNullable: Boolean
	
	val scope: KtTypeReference?
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is KtFunctionTypeReference) return false
		
		if (parameters != other.parameters) return false
		if (result != other.result) return false
		if (isNullable != other.isNullable) return false
		if (scope != other.scope) return false
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
			.with(parameters)
			.with(result)
			.with(isNullable)
			.with(scope)
	
	override fun toJson(): String =
		"""{"parameters":${parameters.toJsonString()},"result":${result.toJsonString()},"isNullable":${isNullable.toJsonString()},"scope":${scope.toJsonString()}}"""
	
	override fun duplicate(): KtFunctionTypeReference
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
