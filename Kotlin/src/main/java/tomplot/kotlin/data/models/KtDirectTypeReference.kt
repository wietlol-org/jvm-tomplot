// hash: #ba2b427e
// data: serializationKey:fdb2aa46-8e7f-4650-928f-b100ff046729
// @formatter:off

package tomplot.kotlin.data.models

import java.util.UUID
import bitblock.api.serialization.BitSerializable
import utils.common.Jsonable
import utils.common.emptyHashCode
import utils.common.toJsonString
import utils.common.with

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq
// @tomplot:customCode:end
// @formatter:off

interface KtDirectTypeReference : BitSerializable, KtTypeReference, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("fdb2aa46-8e7f-4650-928f-b100ff046729")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	val path: List<String>
	
	val genericTypeArguments: List<KtGenericTypeArgument>
	
	val isNullable: Boolean
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is KtDirectTypeReference) return false
		
		if (path != other.path) return false
		if (genericTypeArguments != other.genericTypeArguments) return false
		if (isNullable != other.isNullable) return false
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
			.with(path)
			.with(genericTypeArguments)
			.with(isNullable)
	
	override fun toJson(): String =
		"""{"path":${path.toJsonString()},"genericTypeArguments":${genericTypeArguments.toJsonString()},"isNullable":${isNullable.toJsonString()}}"""
	
	override fun duplicate(): KtDirectTypeReference
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
