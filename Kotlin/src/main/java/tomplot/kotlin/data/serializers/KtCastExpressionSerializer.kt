// hash: #43f3df88
// @formatter:off

package tomplot.kotlin.data.serializers

import java.io.InputStream
import java.io.OutputStream
import java.util.UUID
import bitblock.api.serialization.DeserializationContext
import bitblock.api.serialization.ModelSerializer
import bitblock.api.serialization.Schema
import bitblock.api.serialization.SerializationContext
import bitblock.api.serialization.deserialize
import tomplot.kotlin.data.builders.KtCastExpressionBuilder
import tomplot.kotlin.data.models.*
import tomplot.kotlin.data.models.KtCastExpression
import utils.common.streams.readUnsignedVarInt
import utils.common.streams.writeUnsignedVarInt

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:70v0f9
// @tomplot:customCode:end
// @formatter:off

object KtCastExpressionSerializer : ModelSerializer<KtCastExpression, KtCastExpression>
{
	private val endOfObject: Int = 0
	
	private val expressionIndex: Int = 1
	
	private val targetIndex: Int = 2
	
	private val isConditionalCastIndex: Int = 3
	
	override val modelId: UUID
		get() = KtCastExpression.serializationKey
	
	override val dataClass: Class<KtCastExpression>
		get() = KtCastExpression::class.java
	
	override fun serialize(serializationContext: SerializationContext, stream: OutputStream, schema: Schema, entity: KtCastExpression)
	{
		stream.writeUnsignedVarInt(expressionIndex)
		schema.serialize(serializationContext, stream, entity.expression)
		
		stream.writeUnsignedVarInt(targetIndex)
		schema.serialize(serializationContext, stream, entity.target)
		
		stream.writeUnsignedVarInt(isConditionalCastIndex)
		schema.serialize(serializationContext, stream, entity.isConditionalCast)
		
		stream.writeUnsignedVarInt(endOfObject)
	}
	
	override fun deserialize(deserializationContext: DeserializationContext, stream: InputStream, schema: Schema): KtCastExpression
	{
		var expression: KtExpression? = null
		var target: KtExpression? = null
		var isConditionalCast: Boolean? = null
		
		while (true)
		{
			when (stream.readUnsignedVarInt())
			{
				endOfObject -> return DefaultKtCastExpression(
					expression!!,
					target!!,
					isConditionalCast!!,
				)
				expressionIndex -> expression = schema.deserialize(deserializationContext, stream)
				targetIndex -> target = schema.deserialize(deserializationContext, stream)
				isConditionalCastIndex -> isConditionalCast = schema.deserialize(deserializationContext, stream)
				else -> schema.deserialize<Any>(deserializationContext, stream)
			}
		}
	}
	
	// @formatter:on
	// @tomplot:customCode:start:5CFs54
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
